name: CI

on: [push]

jobs:

  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        resolver-version:
          - 'lts-4'
          - 'lts-5'
          - 'lts-6'
          - 'lts-7'
          - 'lts-8'
          - 'lts-9'
          - 'lts-10'
          - 'lts-11'
          - 'lts-12'
          - 'lts-13'
          - 'lts-14'
          - 'lts-15'
          - 'lts-16'
          - 'lts-17'
          - 'lts-18'
          - 'lts-19'
          - 'nightly'
    steps:
    - uses: actions/checkout@v2
    - name: Cache .stack
      id: cache-stack
      uses: actions/cache@v1
      with:
        path: ~/.stack
        key: ${{ runner.os }}-stack-${{ matrix.resolver-version }}
        restore-keys: |
          ${{ runner.os }}-stack-
    - name: Cache .local
      id: cache-local
      uses: actions/cache@v1
      with:
        path: ~/.local
        key: ${{ runner.os }}-local-${{ matrix.resolver-version }}
        restore-keys: |
          ${{ runner.os }}-local-
    # - uses: actions/setup-haskell@v1
    #   with:
    #     ghc-version: '8.8.2'
    #     cabal-version: '3.0'
    - name: Install stack
      run: |
        mkdir -p ~/.local/bin
        export PATH=~/.local/bin:$PATH
        export RESOLVER=${{ matrix.resolver-version }}
        ./latest $RESOLVER > stack-travis.yaml
        export STACK_YAML=stack-travis.yaml
        if [ ${RESOLVER/lts-/} -lt 10 ]
        then
          curl -L https://github.com/commercialhaskell/stack/releases/download/v1.9.1/stack-1.9.1-linux-x86_64.tar.gz | \
          tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
        else
          curl -L https://www.stackage.org/stack/linux-x86_64 | \
          tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
          stack update
        fi
        stack --no-terminal --skip-ghc-check setup
    - name: Install deps
      run: |
        stack --no-terminal --skip-ghc-check test --only-snapshot
        # install jinja2
        pip3 install --user Jinja2
    - name: Build
      run: |
        stack --no-terminal --skip-ghc-check build
    - name: Test
      run: |
        stack --no-terminal --skip-ghc-check runghc example.hs
        stack --no-terminal --skip-ghc-check test --coverage
        cp -r $(stack path --local-hpc-root) hpc
    - name: Packaging
      run: |
        stack --no-terminal --skip-ghc-check sdist
    - uses: actions/upload-artifact@master
      with:
        name: coverage
        path: hpc
